<Project Sdk="Microsoft.NET.Sdk">

		<PropertyGroup>
				<TargetFrameworks>net461;net472;net48;netstandard2.0;netstandard2.1;netcoreapp3.1;net6.0;net8.0;net8.0-windows10.0.19041.0;net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
				<!-- 平台最低版本要求 -->
				<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-windows'))">10.0.19041.0</SupportedOSPlatformVersion>
				<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-android'))">21.0</SupportedOSPlatformVersion>
				<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-ios'))">14.2</SupportedOSPlatformVersion>
				<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-maccatalyst'))">15.0</SupportedOSPlatformVersion>
				<!-- 统一配置 .NET 6+ 共有的属性 -->
				<DefineConstants>$(DefineConstants);MODERN_DOTNET</DefineConstants>
				<LangVersion>10.0</LangVersion>
				<ImplicitUsings>enable</ImplicitUsings>
				<Nullable>enable</Nullable>
				<!-- info -->
				<PackageId>ManySpeech.AliFsmnVad</PackageId>
				<Version>1.1.3</Version>
				<Authors>manyeyes contributors</Authors>
				<Company>manyeyes contributors</Company>
				<Copyright>Copyright © manyeyes contributors</Copyright>
				<Summary>C# library for decoding Fsmn Vad model , used in speech activity detection</Summary>
				<Description>16k Universal VAD Model: Can be used to detect the start and end time points of effective speech in long speech segments FSMN Monochrome VAD is an efficient speech endpoint detection model proposed by the Speech Team of Damo Institute. It is used to detect the start and end time information of valid speech in input audio, and input the detected valid audio segments into the recognition engine for recognition, reducing recognition errors caused by invalid speech.</Description>				
				<PackageProjectUrl>https://github.com/manyeyes/ManySpeech</PackageProjectUrl>
				<RepositoryUrl>https://github.com/manyeyes/ManySpeech</RepositoryUrl>
				<IncludeSymbols>true</IncludeSymbols>
				<SymbolPackageFormat>snupkg</SymbolPackageFormat>
				<PackageReadmeFile>App_Readme/README.md</PackageReadmeFile>
				<PackageLicenseFile>App_Readme/LICENSE</PackageLicenseFile>
				<PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
				<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
				<PublishRepositoryUrl>true</PublishRepositoryUrl>
				<EmbedUntrackedSources>true</EmbedUntrackedSources>
				<DebugType>embedded</DebugType>
				<SignAssembly>true</SignAssembly>
				<GenerateAssemblyInfo>true</GenerateAssemblyInfo>
				<!--<PackageOutputPath>$(ArtifactsPath)\package</PackageOutputPath>-->
				<!--<Readme>App_Readme/README.md</Readme>-->
		</PropertyGroup>
		
		<ItemGroup>
				<None Include="../../docs/readme/AliFsmnVad/README.md" Pack="true" PackagePath="App_Readme/" Visible="false" />
				<None Include="../../docs/readme/AliFsmnVad/README.zh_CN.md" Pack="true" PackagePath="App_Readme/" Visible="false" />
				<None Include="../../LICENSE" Pack="true" PackagePath="App_Readme/" Visible="false" />
		</ItemGroup>

		<ItemGroup>
				<PackageReference Include="ManySpeech.SpeechFeatures" Version="1.1.7" />
				<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.22.1" />
				<!--<PackageReference Include="YamlDotNet" Version="16.3.0" />
				<PackageReference Include="Vecc.YamlDotNet.Analyzers.StaticGenerator" Version="16.3.0" />-->
				<!-- System.Text.Json：仅为不原生支持的框架添加引用 -->
				<PackageReference Include="System.Text.Json" Version="9.0.8" Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netstandard2.1' OR '$(TargetFramework)' == 'netcoreapp3.1' OR '$(TargetFramework)' == 'net461' OR '$(TargetFramework)' == 'net472' OR '$(TargetFramework)' == 'net48'" />			
		</ItemGroup>

</Project>
